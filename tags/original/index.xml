<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>original on mgorbatyuk.dev</title>
    <link>https://mgorbatyuk.dev/tags/original/</link>
    <description>Recent content in original on mgorbatyuk.dev</description>
    <image>
      <title>mgorbatyuk.dev</title>
      <url>https://mgorbatyuk.dev/images/avatar.png</url>
      <link>https://mgorbatyuk.dev/images/avatar.png</link>
    </image>
    <generator>Hugo -- 0.122.0</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 Oct 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://mgorbatyuk.dev/tags/original/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Сколько времени работать на одном проекте?</title>
      <link>https://mgorbatyuk.dev/blog/employment/2022-10-11-how-much-time-to-spend-on-the-project/</link>
      <pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://mgorbatyuk.dev/blog/employment/2022-10-11-how-much-time-to-spend-on-the-project/</guid>
      <description>Как часто стоит менять проекты? Какой период времени смены работы можно считать некой нормой? На эти рассуждения меня натолкнуло обуждение в одном из чатов разработчиков. Вопрос действительно интересный.
Disclaimer Все данные в статье являются моими личными оценками и не являются истиной в последней инстанции. Смена проетка - не всегда смена работодателя. А иногда даже и новая роль на том же проекте. TL;DR: Адекватные сроки:
Грейд/роль Срок Джун 0.5 - 1 год Миддл 1 - 2 года Сеньор / лид 2 - 3 года Тимлид 2+ лет ПМ 2+ лет Но это не точно.</description>
    </item>
    <item>
      <title>На что стоит обратить внимание во время технических интервью</title>
      <link>https://mgorbatyuk.dev/blog/employment/2021-11-02-tech-interview-essentials/</link>
      <pubDate>Tue, 02 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://mgorbatyuk.dev/blog/employment/2021-11-02-tech-interview-essentials/</guid>
      <description>За время своей карьеры я провел много техничесикх собеседований. Почти в каждой компании я выступал в роли технического интервьюера. Довелось и быть тем, кто аппрувит кандидата на дальнейший этап найма. Мне нравится этот процесс, он позволяет держать теоретические знания в тонусе.
Когда я сам выступаю в роли кандидата, я обращаю внимание на процесс интервью. В результате наблюдений я составил для себя несколько аспектов, которые позволяют сделать мне вывод о кандидате.</description>
    </item>
    <item>
      <title>Знания сами по себе как аргумент в споре</title>
      <link>https://mgorbatyuk.dev/blog/opinion/2020-09-15-knowledge-as-argue-arguement/</link>
      <pubDate>Tue, 15 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://mgorbatyuk.dev/blog/opinion/2020-09-15-knowledge-as-argue-arguement/</guid>
      <description>На днях посмотрел видео, где автор видео критикует книгу о &amp;ldquo;Мужском движении&amp;rdquo;. Книга, как и само мужское движение, так себе. Видео немного лучше, но тоже среднее, на мой взгляд. Но мой пост не об этом. Больше всего в видео меня зацепил этот момент, где автор берет факт из книги и разносит его в пух и прах, как он сам думает.
Факт из книги: &amp;ldquo;&amp;hellip; в некоторых регионах России количество разводов достигает более ста процентов от количества заключенных браков&amp;rdquo;.</description>
    </item>
    <item>
      <title>Мысли о мультфильме &#34;Кунг-фу Панда&#34; и о становлении себя</title>
      <link>https://mgorbatyuk.dev/blog/opinion/2020-08-01-thoughts-about-kung-fu-panda-movie/</link>
      <pubDate>Sat, 01 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://mgorbatyuk.dev/blog/opinion/2020-08-01-thoughts-about-kung-fu-panda-movie/</guid>
      <description>Недавно пересмотрел мультфильм &amp;ldquo;Кунг-фу Панда&amp;rdquo;, а точнее два из трех. Последний раз смотрел почти десять лет назад, поэтому многое уже забылось. Сейчас, когда я вступил в осознанный возраст в 26 лет ¯\_(ツ)_/¯, философия мультфильма видится совершенно другой. Мультфильм о том, как обрести себя, как отпустить прошлое и как начать жить сегодняшним днем.
В первом мультфильме По, главный персонаж, воспользовался случаем и изменил свою жизнь. Случай - его посчитали избранным Воином Дракона.</description>
    </item>
    <item>
      <title>Не берись делать то, чего не понимаешь</title>
      <link>https://mgorbatyuk.dev/blog/opinion/2020-04-24-do-not-develop-what-you-dont-understand/</link>
      <pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://mgorbatyuk.dev/blog/opinion/2020-04-24-do-not-develop-what-you-dont-understand/</guid>
      <description>Написать эту статью меня натолкнул один случай. В моей команде двое junior-девелоперов: парень и девушка, и девушке я делал код-ревью. Задача была простая: ранее она написал экстеншн-метод (extension method из .NET) для валидации свойств объекта, и я предложил перенести этот экстеншн в сам класс объекта в качестве публичного метода. Девушка перенесла метод, и в качестве аргументов передавала те же свойства, которые нужно было провалидировать. Это было странное решение, ведь свойства объекта доступны в самом методе, нет нужды передавать их извне.</description>
    </item>
    <item>
      <title>Действительно ли образование в СССР было &#34;лучшим в мире&#34;?</title>
      <link>https://mgorbatyuk.dev/blog/different/2019-09-29-was-ussr-education-really-good/</link>
      <pubDate>Sun, 29 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://mgorbatyuk.dev/blog/different/2019-09-29-was-ussr-education-really-good/</guid>
      <description>Каждый раз, когда говорят, что &amp;ldquo;в советском союзе было самое лучшее образование в мире&amp;rdquo;, я в это несильно верю.
Разница подходов образования Я не могу судить о западном школьном образовании, потому что я сам не учился в американской школе, однако могу сделать некоторые предположения на основе общеизвестной &amp;ldquo;болонской&amp;rdquo; системе образования в университетах и образовательных документальных видео американского производства.
Западное образование строится на желании самого обучающегося. Американскому школьнику не дают знания в том объеме, в котором их дают советсткому.</description>
    </item>
    <item>
      <title>Должны ли программисты изучать бизнес-сферу проекта</title>
      <link>https://mgorbatyuk.dev/blog/management/2019-09-25-do-programmers-should-know-business-sphere/</link>
      <pubDate>Wed, 25 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://mgorbatyuk.dev/blog/management/2019-09-25-do-programmers-should-know-business-sphere/</guid>
      <description>В комментариях к одному видео некто задал интересный вопрос:
А должны ли программисты изучать бизнес-сферу проекта, где работают?
Автор видео не успел ответить, а я же посчитал, что меня забыли спросить и что я должен ответить на этот вопрос.
Почему не стоит слепо доверять прописанным требованиям Некоторые разработчики могут подумать, что они приходят в компанию писать код и разрабатывать архитектуру, а не вдаваться в подробности бизнеса компании. Что, мол, бизнес-аналитики должны прорабатывать все нюансы проекта и сценарии взаимодействия (Use Case - UML).</description>
    </item>
    <item>
      <title>Что я должен спросить у своей будущей команды. The Joel test.</title>
      <link>https://mgorbatyuk.dev/blog/employment/2019-09-22-what-should-i-ask-from-future-team/</link>
      <pubDate>Sun, 22 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://mgorbatyuk.dev/blog/employment/2019-09-22-what-should-i-ask-from-future-team/</guid>
      <description>Disclamer Источник: https://www.joelonsoftware.com. Эта статья - вольный перевод без претензии на достоверность.
В переводе не стремился сохранить формулировки автора, а использовал перефразирования, которые использую в своей речи сам.
Тест содержит 12 быстрых вопросов, и каждый ответ &amp;ldquo;Да&amp;rdquo; дает один балл. Градация результата такова: 12 баллов - идеально, 11 - это приемлемо, 10 и меньше - у команды есть проблемы. Ну а если команда набрала только лишь 2-3, то у нее действительно серьезные проблемы.</description>
    </item>
    <item>
      <title>Scrum vs Kanban для разработки в банке</title>
      <link>https://mgorbatyuk.dev/blog/opinion/2019-09-19-kanban-for-development-in-bank/</link>
      <pubDate>Thu, 19 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://mgorbatyuk.dev/blog/opinion/2019-09-19-kanban-for-development-in-bank/</guid>
      <description>Disclaimer: Данная статья — только мнение отдельно взятого разработчика о бизнес-процессах в отдельно взятой компании. Никаких неопровержимых доказательств здесь не приводят.
Я работаю в команде разработки раздела сайта в банке. Сайт внешний, содержит FAQ о продуктах банка. Посещаемость клиентами в стране около 587к в месяц. Хотя относительно остальных разделов сайта это небольшая цифра. Например, в разделе “Мой банк” — мобильное интернет-отделение — посещаемость гораздо выше, но точных цифр мне никто не дал.</description>
    </item>
    <item>
      <title>Восточный менеджмент</title>
      <link>https://mgorbatyuk.dev/blog/management/2019-09-08-eastern-management/</link>
      <pubDate>Sun, 08 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://mgorbatyuk.dev/blog/management/2019-09-08-eastern-management/</guid>
      <description>Источник: записи из моего блокнота. Возможно, на лекциях MBA рассказывали, а может и записал откуда-то.
Руководитель - человек, распоряжающийся людскими ресурсами. Менеджер - работний, от принимаемых решений которого зависит в той или иной степени прибыль компании.
Принципы восточного менеджмента 1. Все законы войны распространияются и на искусство ведения бизнеса Успех может ослепить менеджера, а поражение - заставить его думать, что виновы все и вся, но только не он.
2. Если ты силен, то покажи слабость; если ты слаб - покажи силу.</description>
    </item>
    <item>
      <title>Модель S.T.A.R.S. для оценки Soft-Skills</title>
      <link>https://mgorbatyuk.dev/blog/management/2019-09-08-starts-schema-interview/</link>
      <pubDate>Sun, 08 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://mgorbatyuk.dev/blog/management/2019-09-08-starts-schema-interview/</guid>
      <description>Situation Попроси рассказать кандидата о ситуации. Контекст, предпосылки и т.д.
Task / Trouble Какую проблему увидел кандидат в ситуации, почему охарактеризовал ее проблемой.
Actions Какие действия он предпринял для решения проблемы. Почему именно такие. Нужно задавать больше вопросов с How, Why, Who, которые побуждают к рассказу.
Results / Roadblocks Каких результатов кандидат достиг своими действиями.
Self-apprisal Как оцениает кандидат свои действия и результаты.Какие выводы он делает из сложившегося кейса. Что бы кандидат сделал сегодня иначе, если бы сделал.</description>
    </item>
    <item>
      <title>Суть теста Тьюринга</title>
      <link>https://mgorbatyuk.dev/blog/opinion/2019-09-08-thoughts-about-test-of-turing/</link>
      <pubDate>Sun, 08 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://mgorbatyuk.dev/blog/opinion/2019-09-08-thoughts-about-test-of-turing/</guid>
      <description>Из википелии:
Тест Тьюринга — эмпирический тест, идея которого была предложена Аланом Тьюрингом в статье «Вычислительные машины и разум» (англ. Computing Machinery and Intelligence), опубликованной в 1950 году в философском журнале «Mind». Тьюринг задался целью определить, может ли машина мыслить.Стандартное звучание закона: «Если компьютер может работать так, что человек не в состоянии определить, с кем он общается — с другим человеком или с машиной, — считается, что он прошел тест Тьюринга»</description>
    </item>
  </channel>
</rss>
